"""
Gnome排序（地精排序）
地精排序也称为侏儒排序，是一个比较简单的稳定排序算法。
它和插入排序算法非常类似，都是将元素移动到合适的位置，并通过一系列交换
完成的。
地精排序只有一层循环，在大部分数据是有序的情况下，可以减少交换的回合数。
算法原理
1.先初始化一个移动指针，默认大小为1。
2.判断数据是否有交换，如果数据有交换则index--，数据没有交换index++。
3.不断重复第二步操作，当index大于等于数据长度时，表示排序已完成。

实例
例如待排序数组
[6,2,4,1,5,9]
[0,1,2,3,4,5]
具体的排序过程

[i = 1]比较6和2，发生交换，只要发生交换i就减1
交换前[6,2,4,1,5,9]   [i = 1]
交换后[2,6,4,1,5,9]   [i = 0]

[i = 0]i变成0，啥也不干，i自增为1再说
交换前[2,6,4,1,5,9]   [i = 0]
交换后[2,6,4,1,5,9]   [i = 1]

[i = 1]再比较2和6，不交换，只要不交换i就自增1
交换前[2,6,4,1,5,9]   [i = 1]
交换后[2,6,4,1,5,9]   [i = 2]

[i = 2]比较6和4，发生交换，只要交换i就减1
交换前[2,6,4,1,5,9]   [i = 2]
交换后[2,4,6,1,5,9]   [i = 1]

[i = 1]比较4和2，不发生交换，只要不交换i就增1
交换前[2,4,6,1,5,9]   [i = 1]
交换后[2,4,6,1,5,9]   [i = 2]

[i = 2]比较4和6，不发生交换，只要不交换i就增1
交换前[2,4,6,1,5,9]   [i = 2]
交换后[2,4,6,1,5,9]   [i = 3]

[i = 3]比较6和1，发生交换，只要发生交换i就减1
交换前[2,4,6,1,5,9]   [i = 3]
交换后[2,4,1,6,5,9]   [i = 2]

[i = 2]比较4和1，发生交换，只要发生交换i就减1
交换前[2,4,1,6,5,9]   [i = 2]
交换后[2,1,4,6,5,9]   [i = 1]

[i = 1]比较2和1，发生交换，只要发生交换i就减1
交换前[2,1,4,6,5,9]   [i = 1]
交换后[1,2,4,6,5,9]   [i = 0]

[i = 0]i变成0什么也不干，i自增1
交换前[1,2,4,6,5,9]   [i = 0]
交换后[1,2,4,6,5,9]   [i = 1]

[i = 1]比较1和2,不交换,只要不交换就自增1
[i = 2]比较2和4,不交换,只要不交换就自增1
[i = 3]比较4和6,不交换,只要不交换就自增1
[i = 4]比较6和5,交换,只要交换就减1
交换前[1,2,4,6,5,9]   [i = 4]
交换后[1,2,4,5,6,9]   [i = 3]
[i = 3]比较4和5,不交换,只要不交换就自增1
[i = 4]比较5和6,不交换,只要不交换就自增1
[i = 5]比较6和9,不交换,只要不交换就自增1
[i = 6]表达式(i < n)不成立,排序结束,
顺序输出结果即可:[1,2,4,5,6,9]
"""
import random


def GnomeSort(nums):
    index, length = 1, len(nums)
    while index < length:
        if index > 0 and nums[index] < nums[index - 1]:
            nums[index], nums[index - 1] = nums[index - 1], nums[index]
            index -= 1
        else:
            index += 1
    return nums


if __name__ == "__main__":
    nums = []
    for i in range(20):
        nums.append(random.randint(1, 1000))
    print(nums)
    print(GnomeSort(nums))



















